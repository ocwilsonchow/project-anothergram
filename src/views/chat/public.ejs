<%- contentFor('styles') %> <%- contentFor('scripts') %>
<script>
  const user = "<%= user.id  %>"

  const socket = io(window.location.origin)
  socket.on("connection")

  socket.on('systemMessage', (data, count, timestamp) => {
    const $messagesContainer = $('#messages-container')
    const $message = `<div style="font-size: 0.9rem;" class="text-muted text-center p-1 my-2">${data} <span style="font-size: 0.6rem">${moment(timestamp).calendar()}</span></div>`
    const $count = $('#socket-count')
    $messagesContainer.append($message)
    $count.html("Participants in room: " + count)
  })

  // ON RECEIVING MESSAGE
  socket.on('chatMessage', (data, timestamp, userData) => {
    const $messagesContainer = $('#messages-container')
    const $messageInput = $('#messageInput')
    const $message = `
    <div class="d-flex ${userData.id == user && "justify-content-start" || "justify-content-end"}">
      <div class="d-flex ${userData.id == user && "bg-success" || "bg-primary"} py-2 px-2 my-2 rounded-pill">
         ${userId && ` <a href="/profile/${userData?.id}"> <img src="${userData?.avatar}" class="user-avatar" alt="user-avatar" width="40" height="40" style="border-radius: 50%; object-fit: cover;"/></a>`}
         <div class="px-2">
          <div class="text-light">${data}</div>
          <div class="text-light" style="font-size: 0.6rem;">${moment(timestamp).calendar()} by ${userData?.username || "anonymous"}</div>
         </div>
      </div>

    </div>
    `

    $messagesContainer.append($message)
    $messagesContainer.scrollTop($messagesContainer.prop('scrollHeight'))
  })

  // SEND MESSAGE TO SERVER
  const sendMessage = () => {
    const $messageInput = $('#messageInput').val()
    const timestamp = new Date().getTime()
    const user = userData

    if (!$messageInput) {return console.log("Input cannot be empty")}

    socket.emit('chatMessage', $messageInput, timestamp, userData)
    $('#messageInput').val('')
  }

  const generateChatLayout = () => {

    return `
      <h2 class="d-flex align-items-center flex-wrap"><span class="mx-1">Public Live Chat</span><span id="socket-count" class="badge bg-light mx-1 my-2 text-primary" style="font-size: 0.8rem"></span></h2>
      <div id="messages-container" class="p-2 my-2 bg-light" style="border-radius: 1rem; max-height:70vh; min-height: 200px; overflow: auto;">

      </div>
      <div class="input-group mt-3">
        <input type="text" id="messageInput" name="messageInput"  class="form-control">
        <button id="submitMessageBtn" class="btn btn-dark ${(!user) && "disabled"}" type="submit" onclick="sendMessage()">${(!user) && "Login required" || "<i class='bx bx-send'></i>"}</button>
      </div>
    `
  }

  const generateChatPage = () => {
    const $page = $('#pages-chat-public')
    const $chat = generateChatLayout()

    $page.html('').append($chat)

  }

  $(document).ready(() => {
    generateChatPage()

    $('#pages-chat-public').keypress((e) => {

      if(e.which == 13) {
        console.log('submitted')
        sendMessage()
      }

    })

   axios({
     method: "GET",
     url: `/api/profile/${userId}`,
   }).then((resp) => {
     userData = resp.data;
   }).catch(() => {
     generateChatPage()
   })

  });
</script>

<%- contentFor('body') %>
<div id="pages-chat-public" class="card bg-white my-2 p-4" style="border-radius: 1rem; min-height: 40vh">

</div>
