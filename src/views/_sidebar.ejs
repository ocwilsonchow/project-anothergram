<script>
  const userId = "<%= user.id  %>"
  const apiKey = '<%= process.env.OPEN_WEATHER_API_KEY %>';
  let lat, long, weatherData, userData

  axios({
          method: "GET",
          url: `/api/profile/${userId}`,
        }).then((resp) => {
          userData = resp.data;
          generateComponent(menuItems, weatherData, userData)
        });


   const menuItems = [
    {
      title: "Home",
      icon: "bx-home bx-sm",
      link: "/",
      color: "text-dark",
      id: ""
    },
     {
      title: "Community",
      icon: "bx-compass bx-sm",
      link: "/community",
      color: "text-dark"
    },
     {
      title: "My Posts",
      icon: "bx-detail bx-sm",
      link: "/my/posts",
      color: "text-dark",
      id: ""
    },
     {
      title: "Create",
      icon: "bx-edit-alt bx-sm",
      link: "/my/posts/create",
      color: "text-dark",
      id: ""
    },
     {
      title: "Profile",
      icon: "bx-user bx-sm",
      link: "/my/profile/edit",
      color: "text-dark",
      id: ""
    },
     {
      title: "Chat",
      icon: "bx-message-rounded bx-sm",
      link: "/chat/public",
      color: "text-dark",
      id: ""
    },
     {
      title: "Log out",
      icon: "bx-log-out bx-sm",
      link: "/",
      color: "text-danger",
      id: "auth-logout"
    },
  ]

   const getLocation = () => {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((position)=> {
          lat = position.coords.latitude
          long = position.coords.longitude
            axios({
              method: 'GET',
              url: `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${apiKey}&units=metric`,
            }).then((resp)=> {
              weatherData = resp.data
              generateComponent(menuItems, weatherData, userData)
            })
        });
      } else {
        console.log("Geolocation is not supported by this browser.");
        axios({
              method: 'GET',
              url: `https://api.openweathermap.org/data/2.5/weather?lat=22.3355433&lon=114.1622848&appid=${apiKey}&units=metric`,
            }).then((resp)=> {
              weatherData = resp.data
            })
      }
    }
   getLocation()

   const generateWeatherBoard = (weatherData, userData) => {
      if (!weatherData) {
        return `
       <div class="text-dark p-2" style="text-decoration: none;" >
           ${userId && ` <a href="/profile/${userData?.id}"> <img src="${userData?.avatar}" class="user-avatar my-2" alt="user-avatar" width="160px" height="160px" style="border-radius: 50%; object-fit: cover;"/></a>`}
            <h5 class="">Welcome back! ${userId && userData?.username.toUpperCase()}</h5>
            <div> <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span></div>
          </div>`
      }
      return `
          <div class=" text-dark p-2" style="text-decoration: none;" >
            ${userId && ` <a href="/profile/${userData?.id}"> <img src="${userData?.avatar}" class="user-avatar my-2 text-center" alt="user-avatar" width="160px" height="160px" style="border-radius: 50%; object-fit: cover;"/></a>`}
            <h5 class="">Welcome back! ${userId && userData?.username.toUpperCase()}</h5>
            <div class="pt-2">
              <a data-bs-toggle="collapse" style="text-decoration: none" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
                 <div class=' text-dark'>üìç ${weatherData?.name}, ${weatherData?.sys.country}</div>
                 <div class="fw-bold fs-1 text-dark">${weatherData?.main.temp}¬∫C</div>
              </a>
            </div>
            <div class="collapse" id="collapseExample">
              <div class="">
                <div>Overall: ${weatherData?.weather[0].main}</div>
                <div>Humidity: <span class="fw-bold text-dark">${weatherData?.main.humidity}%</span></div>
                <div>Wind Speed: <span class="fw-bold text-dark">${((weatherData?.wind.speed)*3.6).toFixed(1)}km/hr</span></div>
              </div>
            </div>
          </div>
      `
    }

  const generateMenuItem = (menuItem)=> {
     return `
     <a id="${menuItem.id}" class="menu-item py-2 my-3 d-flex ${menuItem.color} align-items-center rounded-3" style="text-decoration: none;" href=${menuItem.link}>
       <i class='mx-2 bx ${menuItem.icon}'></i>
       <div class="mx-3 fs-6 d-none d-sm-none d-lg-none d-xl-block ">${menuItem.title}</div>
     </a>`
  }

  const generateSidebar = (menuItems, weatherData, userData) => {
    if (!userId) {
      return `
      <div class="p-3 d-md-block d-lg-block d-xl-none" >
        <i class='m-2 bx bx-sun bx-sm text-dark'></i>
      </div>
      <div class="p-3 d-md-block d-lg-block d-xl-none" >
        <a class='bx bx-compass bx-sm text-dark' href="/community" style="text-decoration: none"></a>
      </div>
      <div class="p-3 d-md-block d-lg-block d-xl-none" >
        <a class='bx bx-message-rounded bx-sm text-dark' href="/chat/public" style="text-decoration: none"></a>
      </div>
      <div class="p-3 d-md-block d-lg-block d-xl-none" >
        <a class='bx bx-user-plus bx-sm text-dark' href="/auth/signup" style="text-decoration: none"></a>
      </div>
      <div class="p-3 d-md-block d-lg-block d-xl-none" >
        <a class='bx bx-log-in-circle bx-sm text-primary' href="/auth/login" style="text-decoration: none"></a>
      </div>
      <div class="p-3 d-none d-sm-none d-lg-none d-xl-block">
        ${generateWeatherBoard(weatherData, userData)}
      </div>
      <div class="mx-2 d-none d-sm-none d-lg-none d-xl-block">
        <div>
          <a class="btn btn-primary rounded-pill fs-6 my-2" href="/auth/login">Log in</a>
          <a class="btn btn-light rounded-pill my-2" href="/auth/signup">Register</a>
        </div>
        <a class="menu-item py-2 my-2 d-flex text-dark align-items-center rounded-3" style="text-decoration: none;" href='/community'>
          <i class='mx-1 bx bx-compass bx-sm '></i>
          <div class="mx-2 fs-6 d-none d-sm-none d-lg-none d-xl-block ">Community</div>
        </a>
        <a class="menu-item py-2 my-2 d-flex text-dark align-items-center rounded-3" style="text-decoration: none;" href='/chat/public'>
          <i class='mx-1 bx bx-message-rounded bx-sm '></i>
          <div class="mx-2 fs-6 d-none d-sm-none d-lg-none d-xl-block ">Chat</div>
        </a>
      </div>
      `
    }

   return `
   <div class="p-3 d-md-block d-lg-block d-xl-none" >
      <i class='m-2 bx bx-sun bx-sm text-dark'></i>
    </div>
    <div class="px-3 d-md-block d-lg-block d-xl-none" >
     ${userId && ` <a href="/profile/${userData?.id}"> <img src="${userData?.avatar}" class="user-avatar" alt="user-avatar" width="40" height="40" style="border-radius: 50%; object-fit: cover;"/></a>`}
    </div>
    <div class="px-3  d-none d-sm-none d-lg-none d-xl-block">
      ${generateWeatherBoard(weatherData, userData)}
    </div>
   <div class="p-3">
    ${menuItems.map((menuItem) => generateMenuItem(menuItem)).join("")}
    </div>
   `
  }

  const generateComponent = (menuItems, weatherData, userData) =>{
    const $page = $('#sidebar-menu-container')
    const $menu = generateSidebar(menuItems, weatherData, userData)

    $page.html("").append($menu)
  }


    $(document).ready(() =>{

      generateComponent(menuItems, weatherData, userData)


      $("#sidebar-menu-container").on("click", "#auth-logout", (e) => {
        console.log("log out")
      e.preventDefault();

      axios({
        method: "DELETE",
        url: "/api/auth/logout",
      }).then(() => {
        window.location.href = "/";
      });
    });

    })

</script>


  <div id="sidebar-menu-container" class="card d-flex flex-column justify-content-center align-items-center" style="border-radius: 15px;"></div>
