<%- contentFor('styles') %> <%- contentFor('scripts') %>
<script>
  const user = "<%= user.id  %>"
  const id = window.location.href.split('/').reverse()[0]




  const generatePost = ({post, isLoading, errors}) => {

    if (isLoading) return `<div class="text-center mb-3">Loading...</div>`

    return `
      <div class="col " >
        <a class="card text-body p-3 mx-auto" style="text-decoration: none; border-radius: 1rem; max-width: 800px">
         <div class="card-body">
              <h4 class="card-title mb-2">${post.title}</h4>
              <img src="${post.user.avatar}" alt="user-avatar" width="40" height="40" style="border-radius: 50%; object-fit: cover;"/>
              <span class="badge bg-light text-muted">Posted by ${post.user.username}</span>
              <span class="badge bg-light text-muted">#${post.id}</span>
              <p class="card-text my-3" style="text-align: left;">${post.content}</p>
            </div>
          <div>
            <span class="badge bg-light text-muted">${moment(post.createdAt).subtract(1, 'days').calendar()}</span>
          </div>


          <form id="comment-new-form" class="py-3">
            <div class="input-group mb-3">
              <input type="text" class="form-control" required placeholder="Your comment" name="content">
               <input type="number" hidden class="form-control" id="postId" name="postId" value=${post.id}>
              <button class="btn btn-outline-secondary ${(!user) && "disabled"}"   type="submit" id="comment-submit">${(!user) && "Login required" || "Comment"}</button>
            </div>
          </form>


          ${post.comment.map((comment) => {
            return `
              <div class="d-flex p-2 my-1 rounded-pill bg-light align-items-center justify-content-between">
                <span class="d-flex m-2 justify-content-center">
                  <img src="${comment.user.avatar}" alt="user-avatar" width="40" height="40" style="border-radius: 50%; object-fit: cover;"/>
                  <span class="ms-3">
                    <div>${comment.user.username} <span class="badge bg-light text-muted">${moment(comment.createdAt).calendar()}</span></div>
                    <div class="text-muted">${comment.content}</div>

                  </span>
                </span>
                <span class="p-2">
                  <form id="delete-comment">
                    <!-- Button trigger modal -->
                    <button type="button" class="rounded-pill btn btn-secondary btn-sm" id="delete-my-comment-confirm"  value=${comment.id} ${comment.userId != user && "disabled hidden"} data-bs-toggle="modal" data-bs-target="#staticBackdrop">Delete</button>
                  </form>
                </span>
              </div>
            `
          }).join("")}

        </a>
      </div>
`;
  };


  const generatePage = (info) => {
    const $page = $("#pages-posts-show");
    const $post = generatePost(info);


    $page.html("").append($post);
  };

  $(document).ready(() => {
    generatePage({ isLoading: true });

      // Delete Comment
    $("#pages-posts-show").on("click", "#delete-my-comment-confirm", (e) => {
      $(e.target).attr("disabled", true);
      const deleteId = e.target.value
      console.log(deleteId)

      axios({
        method: "DELETE",
        url: `/api/comments`,
        params: { deleteId }
      }).then((resp) => {
        window.location.href = `/posts/${id}`;
      }).catch((err)=>{
        console.log(err)
      })
    });


    $('#pages-posts-show').on('submit', '#comment-new-form', (e) => {
     e.preventDefault()
      $('#comment-new-form button[type="submit"]').attr("disabled", true);
     const data = new FormData(e.target);
     console.log(data)

        axios({
          method: "POST",
          url: '/api/comments',
          data
          }).then((resp) => {
             window.location.href = `/posts/${id}`;
          }).catch((err)=>{
         console.log(err)
          })
    })

    axios({
      method: "GET",
      url: `/api/posts/${id}`,
    }).then((resp) => {
      generatePage({isLoading: false, post: resp.data});

    }).catch(() => {
    generatePage()
    })

  })
</script>

<%- contentFor('body') %>
<div id="pages-posts-show" class=""></div>
